{"version":3,"file":"static/js/937.bab59807.chunk.js","mappings":"kLAqDMA,EAAgB,SAACC,GAAiB,MAAe,kBAARA,GAA4B,OAARA,CAAY,EAEzEC,EAAW,SAACC,G,IAChBC,EAAUD,EAAAE,MAAVA,OAAK,IAAAD,EAAG,GAAEA,EACVE,EAAaH,EAAAI,UAAbA,OAAS,IAAAD,EAAG,EAACA,EACbE,EAAQL,EAAAK,SACRC,EAAON,EAAAM,QACPC,EAAWP,EAAAO,YACXC,EAAuBR,EAAAS,gBAAvBA,OAAe,IAAAD,GAAQA,EACvBE,EAAkBV,EAAAW,UAAlBA,OAAS,IAAAD,EAAG,OAAMA,EAClBE,EAAeZ,EAAAY,gBACfC,EAAWb,EAAAa,YACXC,EAAcd,EAAAc,eACdC,EAAUf,EAAAe,WACVC,EAAAhB,EAAAiB,kBAAAA,OAAoB,IAAAD,GAAKA,EAEnBE,EAAgCC,EAAAA,SAAe,GAA9CC,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,EAAYH,EAAAA,OAA6C,IAEzDI,EAAc,WAAM,OAACrB,EAAQA,EAAMsB,WAAWC,MAAM,IAAM,EAAtC,EAEpBC,EAA2B,WAAdf,GAAwC,QAAdA,EAE7CQ,EAAAA,WAAgB,WACdG,EAAUK,QAAUL,EAAUK,QAAQC,MAAM,EAAGxB,EACjD,GAAG,CAACA,IAEJe,EAAAA,WAAgB,W,MACVV,IACkB,QAApBT,EAAAsB,EAAUK,QAAQ,UAAE,IAAA3B,GAAAA,EAAE6B,QAE1B,GAAG,CAACpB,IAEJ,IAAMqB,EAAsB,WAC1B,GAA2B,kBAAhBjB,EAA0B,CACnC,GAAIA,EAAYkB,SAAW3B,EACzB,OAAOS,EAGLA,EAAYkB,OAAS,GACvBC,QAAQC,MAAM,qEAEjB,CAEH,EAEMC,EAAoB,SAAChC,GAEzB,OADoBwB,GAAcS,MAAMC,OAAOlC,IAA2B,kBAAVA,IAClB,IAAxBA,EAAMmC,OAAON,MACrC,EAEMO,EAAe,SAACC,GACZ,IAAArC,EAAUqC,EAAMC,OAAMtC,MAE1BgC,EAAkBhC,KACpBuC,EAAkBvC,GAClBwC,EAAWtB,EAAc,GAE7B,EAEMuB,EAAoB,SAACJ,GACjB,IAAAK,EAAgBL,EAAKK,YACvB1C,EAAQqC,EAAMC,OAAOtC,MAE3B,IAAKgC,EAAkBhC,GAAQ,CAI7B,GAAIA,EAAM6B,SAAW3B,EACKF,EAAMuB,MAAM,IAAIoB,MAAK,SAACC,GAAc,OAACZ,EAAkBY,EAAU,MAEvFC,EAAgB7C,EAAMuB,MAAM,KAC5BiB,EAAWtC,EAAY,IAOF,OAArBwC,EAAYI,MAA2C,0BAA1BJ,EAAYjC,YAC3C4B,EAAMU,iBACNR,EAAkB,IAClBC,EAAWtB,EAAc,IAK3BmB,EAAMC,OAAOtC,MAAQ,EACtB,CACH,EAOMgD,EAAa,WACjB7B,EAAeD,EAAc,EAC/B,EAEM+B,EAAgB,SAACZ,GACrB,IAAMa,EAAM7B,IACR,CAACgB,EAAMc,KAAMd,EAAMe,KAAKC,SAAS,cACnChB,EAAMU,iBACNR,EAAkB,IAClBC,EAAWtB,EAAc,IACD,WAAfmB,EAAMc,MACfd,EAAMU,iBACNR,EAAkB,KACM,cAAfF,EAAMc,MACfd,EAAMU,iBACNP,EAAWtB,EAAc,IACD,eAAfmB,EAAMc,MAMRd,EAAMe,MAAQF,EAAIhC,IALzBmB,EAAMU,iBACNP,EAAWtB,EAAc,IAQV,aAAfmB,EAAMc,MACS,UAAfd,EAAMc,MACS,YAAfd,EAAMc,MACS,cAAfd,EAAMc,MAENd,EAAMU,gBAEV,EAEMP,EAAa,SAACc,G,QACZpC,EAAcqC,KAAKC,IAAID,KAAKE,IAAIvD,EAAY,EAAGoD,GAAQ,GAEzDlC,EAAUK,QAAQP,KACU,QAA9BpB,EAAAsB,EAAUK,QAAQP,UAAY,IAAApB,GAAAA,EAAE6B,QACF,QAA9B5B,EAAAqB,EAAUK,QAAQP,UAAY,IAAAnB,GAAAA,EAAE2D,SAChCvC,EAAeD,GAEnB,EAEMqB,EAAoB,SAACvC,GACzB,IAAMkD,EAAM7B,IACZ6B,EAAIhC,GAAelB,EAAM,GACzB6C,EAAgBK,EAClB,EAEML,EAAkB,SAACK,GACvB,IAAMS,EAAWT,EAAIU,KAAK,IAC1BzD,EAASwD,EACX,EAEME,EAAc,SAACxB,G,MACnBA,EAAMU,iBAEN,IAAMG,EAAM7B,IACRyC,EAAkB5C,EAGhB6C,EAAa1B,EAAM2B,cACtBC,QAAQ,cACRvC,MAAM,EAAGxB,EAAYgB,GACrBK,MAAM,IAGT,IAAIC,IAAcuC,EAAWpB,MAAK,SAAC3C,GAAU,OAAAiC,MAAMC,OAAOlC,GAAb,IAA7C,CAKA,IAAK,IAAIkE,EAAM,EAAGA,EAAMhE,IAAagE,EAC/BA,GAAOhD,GAAe6C,EAAWlC,OAAS,IAC5CqB,EAAIgB,GAA6B,QAAtBpE,EAAAiE,EAAWI,eAAW,IAAArE,EAAAA,EAAA,GACjCgE,KAIJtB,EAAWsB,GACXjB,EAAgBK,EAXf,CAYH,EAEA,OACEjC,EAAAA,cAAA,OACEmD,MAAOC,OAAOC,OAAO,CAAEC,QAAS,OAAQC,WAAY,UAAY7E,EAAciB,IAAmBA,GACjG6D,UAAqC,kBAAnB7D,EAA8BA,OAAiB8D,EACjEtE,QAASA,GAERuE,MAAMC,KAAK,CAAE/C,OAAQ3B,IAAa,SAAC2E,EAAGvB,GAAU,OAAAA,CAAK,IAAEwB,KAAI,SAACxB,G,UAAU,OACrErC,EAAAA,cAACA,EAAAA,SAAe,CAAAmC,IAAKE,GAClBjD,EACC,CACEL,MAA2B,QAApBF,EAAAuB,IAAciC,UAAM,IAAAxD,EAAAA,EAAI,GAC/Ba,YAA2C,QAA9BV,EAAwB,QAAxBF,EAAA6B,WAAwB,IAAA7B,OAAA,EAAAA,EAAAuD,UAAM,IAAArD,EAAAA,OAAIyE,EAC/CK,IAAK,SAACC,GAAY,OAAC5D,EAAUK,QAAQ6B,GAAS0B,CAAO,EACrD7E,SAAUiC,EACV6C,QAAS,SAAC5C,GAAU,OAxGZ,SAACA,GAA8C,gBAACiB,GAClEnC,EAAemC,GACfjB,EAAMC,OAAOoB,Q,CACd,CAqG+BwB,CAAY7C,EAAZ6C,CAAmB5B,EAAM,EAC7C6B,OAAQnC,EACRoC,UAAWnC,EACX7C,QAASyD,EACTwB,aAAc,MACd,aAAc,8BAAAC,OAA8BhC,EAAQ,GACpDc,MAAOC,OAAOC,OACXvD,EAAuE,CAAC,EAAnD,CAAEwE,MAAO,MAAOC,UAAW,UACjD7F,EAAckB,GAAcA,EAAa,CAAC,GAE5C4D,UAAiC,kBAAf5D,EAA0BA,OAAa6D,EACzDe,KAAMhF,EACNiF,UAAWlE,EAAa,UAAY,OACpCmE,QAASlD,GAEXa,GAEDA,EAAQpD,EAAY,IAAiC,oBAApBQ,EAAiCA,EAAgB4C,GAAS5C,G,IAKtG,E,4ECnQA,MAqHA,EArHgBkF,KAAO,IAADC,EACpB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAEzDK,EAAAA,EAAAA,YAAU,KAAO,IAADC,GACL,OAARV,QAAQ,IAARA,GAAe,QAAPU,EAARV,EAAUW,aAAK,IAAAD,IAAfA,EAAiBE,QAASd,EAAS,IAAI,GACvC,KAEHW,EAAAA,EAAAA,YAAU,KACR,GAAIP,EAAW,EAAG,CAChB,MAAMW,EAAQC,YAAW,IAAMX,EAAYD,EAAW,IAAI,KAC1D,MAAO,IAAMa,aAAaF,EAC5B,CACEL,GAAoB,EACtB,GACC,CAACN,IAiBJ,OACEc,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,qDAAoD0C,UACjEC,EAAAA,EAAAA,MAAA,OAAK3C,UAAU,yBAAwB0C,SAAA,EACrCD,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,OAAM0C,UAEnBD,EAAAA,EAAAA,KAAA,MAAIzC,UAAU,qIAAoI0C,SAAC,wBAIrJD,EAAAA,EAAAA,KAAA,MAAIzC,UAAU,iCAAgC0C,SAAC,qBAC/CD,EAAAA,EAAAA,KAAA,QAAMzC,UAAU,yCAAwC0C,SAAC,uEAGzDD,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,SA7BcC,IACpB,MAAMzE,EAAO,CACX0E,YAAaC,EAAAA,GACbC,YAAaC,KAAKC,UAAUL,IAG9BzB,GAAS+B,EAAAA,EAAAA,IAAe/E,IAAOgF,MAAMC,IACW,IAADC,EAA5B,6BAAbD,EAAItC,MACNO,EAAS,kBAAmB,CAC1Ba,MAAO,CAAEC,MAAe,OAARZ,QAAQ,IAARA,GAAe,QAAP8B,EAAR9B,EAAUW,aAAK,IAAAmB,OAAP,EAARA,EAAiBlB,QAErC,GACA,EAkBImB,eAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRC,EAAAA,IAAyB,IAC5BrB,MAAe,OAARZ,QAAQ,IAARA,GAAe,QAAPL,EAARK,EAAUW,aAAK,IAAAhB,OAAP,EAARA,EAAiBiB,QAE1BsB,iBAAkBC,EAAAA,GAA6BlB,SAE9CmB,IAAA,IAAC,OAAEf,EAAM,OAAEgB,EAAM,QAAEC,EAAO,aAAEpG,EAAY,WAAEY,GAAYsF,EAAA,OACrDlB,EAAAA,EAAAA,MAACqB,EAAAA,GAAI,CAAAtB,SAAA,EACHC,EAAAA,EAAAA,MAAA,OAAK3C,UAAU,QAAO0C,SAAA,EACpBD,EAAAA,EAAAA,KAAA,SAAOzC,UAAU,+CAA8C0C,SAAC,eAGhED,EAAAA,EAAAA,KAACwB,EAAQ,CACP1I,MAAOuH,EAAOoB,MACdzI,UAAW,EACXC,SAAWwI,GACTvG,EAAa,CACXE,OAAQ,CAAEsG,KAAM,QAAS5I,MAAO2I,KAGpCjI,iBAAiBwG,EAAAA,EAAAA,KAAA,QAAAC,SAAM,MACvB9G,YAAcwI,IACZ3B,EAAAA,EAAAA,KAAA,SAAAgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMW,GAAK,IACTD,KAAK,QACLzD,OAAQnC,EACRoB,MAAO,CACLmB,MAAO,OACPuD,OAAQ,QAEVrE,UAAU,oOAIf8D,EAAOI,OAASH,EAAQG,QACvBzB,EAAAA,EAAAA,KAAA,KAAGzC,UAAU,uBAAsB0C,SAAEoB,EAAOI,YAIhDzB,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,qCAAoC0C,UACjDD,EAAAA,EAAAA,KAAA,UACEzB,KAAK,SAELhB,UAAS,qBAAAa,OACPmB,EAAmB,gBAAkB,iBAEvCsC,SAAUtC,EAAiBU,SAE1BV,EAAgB,iBAAAnB,OACIc,EAAQ,KACzB,kBAGRc,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACRC,KAAK,SACLxD,KAAK,SACLhB,UAAU,yDAEP,QAIT,E,cCzHV,MAkBA,EAlBkByE,KAMdhC,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,GAAE0C,UACfD,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,4BAA2B0C,UACxCD,EAAAA,EAAAA,KAACiC,EAAAA,EAAW,CACVC,SAAUxD,EACVyD,gBATcC,IACpBxH,QAAQyH,IAAI,eAAgBD,EAAI,EAS1BE,YAAY,kB,mECXtB,MAAML,EAAeN,IACnB,MAAM,SAAEO,EAAQ,YAAEI,GAAgBX,EAClC,OACEzB,EAAAA,EAAAA,MAAA,OAAK3C,UAAU,kEAAiE0C,SAAA,EAC9ED,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,kDAAiD0C,UAC9DD,EAAAA,EAAAA,KAAA,OACEzC,UAAU,4FACVL,MAAO,CAAEqF,gBAAgB,OAADnE,OAASoE,EAAAA,EAAOC,OAAM,MAAMxC,UAEpDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MACEzC,UAAU,iDACVL,MAAO,CACLwF,WAAY,kCACZzC,SAEDqC,KAEHtC,EAAAA,EAAAA,KAAA,KACEzC,UAAU,oDACVL,MAAO,CACLwF,WAAY,kCACZzC,SACH,kEAGDD,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,OAAOc,MAAO,IAAKsE,IAAKH,EAAAA,EAAOI,IAAKC,IAAI,MACvD7C,EAAAA,EAAAA,KAAA,OAAKzC,UAAU,sBAAqB0C,UAClCD,EAAAA,EAAAA,KAAA,KACEzC,UAAU,wCACVL,MAAO,CACLwF,WAAY,kCACZzC,SACH,qFAQTD,EAAAA,EAAAA,KAAA,OACEzC,UAAU,iDACVL,MAAO,CACLqF,gBAAgB,OAADnE,OAASoE,EAAAA,EAAOM,iBAAgB,MAC/C7C,SAEDiC,IAAYlC,EAAAA,EAAAA,KAACkC,EAAQ,CAACvH,OAAQ,QAE7B,EAIV,GAAeoI,EAAAA,EAAAA,MAAKd,E,wDCtDpB,MAAMe,EAAWrB,IACf,MAAM,KACJI,EAAI,UACJxE,EAAS,cACT0F,EAAa,KACb1E,EAAO,SAAQ,SACfsD,GAAW,GACTF,EAEJ,OACE3B,EAAAA,EAAAA,KAAA,UACEzB,KAAMA,EACNsD,SAAUA,EACVqB,QAASD,EACT1F,UAAS,oMAAAa,OACmGb,EAAS,eAAc0C,SAElI8B,GACM,EAIb,GAAegB,EAAAA,EAAAA,MAAKC,E,wOCxBb,MAAMG,EAAgB,SAChB5C,EAAqB,aACrB6C,EAA0B,aAC1BC,EAAuB,iBACvBC,EAA0B,eAC1BC,EAAyB,iBACzBC,EAA4B,eAC5BC,EAA0B,kBAC1BC,EAAsB,sBACtBC,EAA2B,iBAC3BC,EAAqB,yBACrBC,EAA6B,iBAC7BC,EAA4B,oBAC5BC,EAA6B,oBAC7BC,EAA8B,oBAC9BC,EAA+B,sBAC/BC,EAA4C,iBAC5CC,EAAqC,0BAErCC,EACX,uBA+FWC,EAAoB,CAC/B,CAAEC,MAAO,YAAaxL,OAAO,GAC7B,CAAEwL,MAAO,cAAexL,OAAO,IAGpByL,EAAsBA,IACjC9G,MAAMC,KAAK,CAAE/C,OAAQ,KAAM,CAACgD,EAAG6G,KAAC,CAC9BF,MAAM,UAADlG,OAAYoG,EAAI,EAAC,SACtB1L,MAAO0L,EAAI,MAGFC,EAAyB,CACpC,CAAE3L,MAAO,UAAWwL,MAAO,WAC3B,CAAExL,MAAO,aAAcwL,MAAO,eAC9B,CAAExL,MAAO,YAAawL,MAAO,aAC7B,CAAExL,MAAO,YAAawL,MAAO,gBAGlBI,EAAuB,CAClC,CACE5L,MAAO,eACPwL,MAAO,kBAET,CACExL,MAAO,UACPwL,MAAO,WAET,CACExL,MAAO,YACPwL,MAAO,a,kGChJJ,MAAMK,EAAwB,CACnC/E,MAAO,GACPgF,SAAU,IAGCC,EAAyB,CACpCC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPpF,MAAO,GACPqF,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,gBAAiB,GACjBC,QAAS,CACP,CACEC,MAAO,GACPC,MAAO,GACPR,OAAQ,GACRS,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbT,aAAc,KAIlBU,cAAe,CACb,CACEC,aAAc,GACdC,UAAU,KAKHC,EAAgC,CAC3CtG,MAAO,GACPgF,SAAU,GACVO,SAAU,GACVC,UAAW,GACXe,YAAa,GACbC,eAAgB,GAChBC,cAAc,EACdC,KAAM,cAGKC,EAAoC,CAC/CC,GAAI,GACJC,uBAAwB,GACxBC,yBAA0B,GAC1BC,gCAAiC,IAGtBC,EAAmC,CAC9C3B,OAAQ,IAGG4B,EAAiC,CAC5CjH,MAAO,IAGIqB,EAA4B,CACvCrB,MAAO,GACP6B,MAAO,IAGIqF,EAA8B,CACzClH,MAAO,GACPmH,YAAa,G,wHCrEf,MAAMC,EAAiBC,EAAAA,KACpB1K,IAAI,EAAG,kBACPD,IAAI,GAAI,iBACR4K,SAAS,iBAENC,EAAkBF,EAAAA,KACrBG,QAAQ,4CAA6C,iBACrDF,SAAS,kBAENG,EAAwBJ,EAAAA,KAC3B1K,IACC,EACA,+FAEDD,IAAI,GAAI,iDACR8K,QACC,+EACA,+FAEDF,SAAS,qBAENI,EAAkBL,EAAAA,KACrBG,QAAQ,gBAAiB,6BACzBF,SAAS,4BAENK,EAAgBN,EAAAA,KACnBC,SAAS,8BACT5K,IAAI,GACJC,IAAI,GAEDiL,EAAeP,EAAAA,KAClBC,SAAS,6BACT5K,IAAI,IACJC,IAAI,GAEDkL,EAAcR,EAAAA,KAAaC,SAAS,4BAEpCQ,EAA0BT,EAAAA,KAC7BC,SAAS,0BACT3K,IAAI,GACJD,IAAI,IAEDqL,EAAwBV,EAAAA,KAC3BC,SAAS,0BACT3K,IAAI,GACJD,IAAI,IAEDsL,EAAwBX,EAAAA,KAC3BC,SAAS,2BACT3K,IAAI,GACJD,IAAI,KAEDuL,EAAiBZ,EAAAA,KAAa3K,IAAI,OAAOwL,WAEzCC,EAAuCd,EAAAA,KAC1C1K,IAAI,GACJD,IAAI,IACJwL,WAEGE,EAA2Bf,EAAAA,KAAcC,SAC7C,0BAGWe,EAAuChB,EAAAA,KACjD1K,IACC,EACA,+FAEDD,IAAI,GAAI,iDACR8K,QACC,+EACA,+FAGSc,EAA2BjB,EAAAA,KAAakB,MAAM,CACzDvI,MAAOuH,EACPvC,SAAUoC,IAGCoB,EAA4BnB,EAAAA,KAAakB,MAAM,CAC1DrD,KAAM2C,EACN1C,KAAMwC,EACNvC,MAAOwC,EACP5H,MAAOuH,EACPhC,SAAU6B,EACV5B,UAAW4B,EACX9B,SAAUoC,EACVrC,OAAQ0C,EACRtC,aAAc0C,EACdzC,gBAAiByC,EAEjBxC,QAAS0B,EAAAA,KAAYoB,GACnBpB,EAAAA,KAAakB,MAAM,CACjB3C,MAAOuC,EACPrC,SAAUqC,EACVnC,SAAUmC,EACV9C,OAAQ0C,EACRhC,SAAU+B,EACV5B,YAAa8B,EACb/B,WAAY6B,EACZrC,aAAcsC,EACdlC,MAAOoC,KAIX9B,cAAekB,EAAAA,KAAYoB,GACzBpB,EAAAA,KAAakB,MAAM,CACjBlC,SAAU+B,EACVhC,aAAc0B,OAKPY,EAAmCrB,EAAAA,KAAakB,MAAM,CACjEvI,MAAOuH,EACPhC,SAAU6B,EACV5B,UAAW4B,EACXV,KAAMqB,EACNxB,YAAamB,EACb1C,SAAUyC,EACVjB,eAAgBuB,EAChBtB,aAAc2B,IAGHO,EAAsCtB,EAAAA,KAAakB,MAAM,CACpE3B,GAAIS,EAAAA,KACJR,uBAAwBkB,EACxBjB,yBAA0BiB,EAC1BhB,gCAAiCgB,IAGtBa,EAAmCvB,EAAAA,KAAakB,MAAM,CACjElD,OAAQ0C,IAGGc,EAAyBxB,EAAAA,KAAakB,MAAM,CACvDvI,MAAOuH,IAGIhG,EAA+B8F,EAAAA,KAAakB,MAAM,CAC7DvI,MAAOuH,EACP1F,MAAOiG,IAGIgB,EAAiCzB,EAAAA,KAAakB,MAAM,CAC/DvI,MAAOuH,EACPJ,YAAaM,G","sources":["../node_modules/src/index.tsx","Shared/Forms/OtpForm/index.jsx","Pages/Auth/VerifyOtp/index.jsx","Shared/AuthWrapper/index.jsx","Shared/CustomBtn/index.jsx","Utils/constant.jsx","Validations/InitialValues.js","Validations/Validations.js"],"sourcesContent":["import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'autoComplete'\n    | 'style'\n    | 'inputMode'\n    | 'onInput'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Callback to be called when pasting content into the component */\n  onPaste?: (event: React.ClipboardEvent<HTMLDivElement>) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n  /** Do not apply the default styles to the inputs, will be removed in future versions */\n  skipDefaultStyles?: boolean; // TODO: Remove in next major release\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  onPaste,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n  skipDefaultStyles = false,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { nativeEvent } = event;\n    const value = event.target.value;\n\n    if (!isInputValueValid(value)) {\n      // Pasting from the native autofill suggestion on a mobile device can pass\n      // the pasted string as one long input to one of the cells. This ensures\n      // that we handle the full input and not just the first character.\n      if (value.length === numInputs) {\n        const hasInvalidInput = value.split('').some((cellInput) => !isInputValueValid(cellInput));\n        if (!hasInvalidInput) {\n          handleOTPChange(value.split(''));\n          focusInput(numInputs - 1);\n        }\n      }\n\n      // @ts-expect-error - This was added previously to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n\n      // Clear the input if it's not valid value because firefox allows\n      // pasting non-numeric characters in a number type input\n      event.target.value = '';\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n      onPaste={onPaste}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                !skipDefaultStyles ? ({ width: '1em', textAlign: 'center' } as const) : {},\n                isStyleObject(inputStyle) ? inputStyle : {}\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n              inputMode: isInputNum ? 'numeric' : 'text',\n              onInput: handleInputChange,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport type { OTPInputProps, InputProps, AllowedInputTypes };\nexport default OTPInput;\n","import { Formik, Form } from \"formik\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport CustomBtn from \"../../CustomBtn\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { verifyEmailOtp } from \"../../../Redux/features/Auth/authApi\";\r\nimport { VERIFY_OTP_INITIAL_VALUES } from \"../../../Validations/InitialValues\";\r\nimport { VERIFY_OTP_VALIDATION_SCHEMA } from \"../../../Validations/Validations\";\r\nimport { VERIFY_OTP_API_URL } from \"../../../Utils/constant\";\r\n\r\nconst OtpForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [userEmail, setUserEmail] = useState(10);\r\n  const [isResendDisabled, setIsResendDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    !location?.state?.email && navigate(\"/\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setIsResendDisabled(false);\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  const handleSubmit = (values) => {\r\n    const data = {\r\n      apiEndpoint: VERIFY_OTP_API_URL,\r\n      requestData: JSON.stringify(values),\r\n    };\r\n\r\n    dispatch(verifyEmailOtp(data)).then((res) => {\r\n      if (res.type === \"verifyEmailOtp/fulfilled\") {\r\n        navigate(\"/setNewPassword\", {\r\n          state: { email: location?.state?.email },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col items-center justify-center\">\r\n      <div className=\"my-auto md:w-96 w-full\">\r\n        <div className=\"my-8\">\r\n          {/* <img width={150} src={Images.LOGO_IMG} alt=\"\" /> */}\r\n          <h3 className=\"m-auto text-2xl text-blacks font-bold text-center w-max px-2 border-b border-gray-300 py-2 rounded-lg shadow-lg shadow-[#0051de49]\">\r\n            Babylon WorkShop\r\n          </h3>\r\n        </div>\r\n        <h3 className=\"w-full text-h3 font-bold  mb-4\">Forgot Password</h3>\r\n        <span className=\"text-center text-sm text-gray-500 mb-6\">\r\n          Your OTP has been sent to your email. Please enter the OTP below.\r\n        </span>\r\n        <Formik\r\n          onSubmit={handleSubmit}\r\n          initialValues={{\r\n            ...VERIFY_OTP_INITIAL_VALUES,\r\n            email: location?.state?.email,\r\n          }}\r\n          validationSchema={VERIFY_OTP_VALIDATION_SCHEMA}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur }) => (\r\n            <Form>\r\n              <div className=\"mb-4 \">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Email OTP\r\n                </label>\r\n                <OtpInput\r\n                  value={values.token}\r\n                  numInputs={6}\r\n                  onChange={(token) =>\r\n                    handleChange({\r\n                      target: { name: \"token\", value: token },\r\n                    })\r\n                  }\r\n                  renderSeparator={<span>-</span>}\r\n                  renderInput={(props) => (\r\n                    <input\r\n                      {...props}\r\n                      name=\"token\"\r\n                      onBlur={handleBlur}\r\n                      style={{\r\n                        width: \"50px\",\r\n                        height: \"50px\",\r\n                      }}\r\n                      className=\"rounded-lg text-center text-xl text-black border border-gray-300 transition-all hover:ring-[#0052DE] hover:ring-opacity-30 focus:outline-none focus:border-[#0052DE] focus:ring-[#0052DE] focus:ring-2 focus:ring-opacity-30\"\r\n                    />\r\n                  )}\r\n                />\r\n                {errors.token && touched.token && (\r\n                  <p className=\"text-sm text-red-500\">{errors.token}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end items-center mb-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  // onClick={handleResendOtp}\r\n                  className={`text-sm font-bold ${\r\n                    isResendDisabled ? \"text-gray-400\" : \"text-blue-500\"\r\n                  }`}\r\n                  disabled={isResendDisabled}\r\n                >\r\n                  {isResendDisabled\r\n                    ? `Resend OTP in ${timeLeft}s`\r\n                    : \"Resend OTP\"}\r\n                </button>\r\n              </div>\r\n              <CustomBtn\r\n                text=\"Verify\"\r\n                type=\"submit\"\r\n                className=\"py-3 px-6 bg-blue-500 text-white rounded-sm w-full\"\r\n              />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpForm;\r\n","import OtpForm from \"../../../Shared/Forms/OtpForm\";\r\nimport AuthWrapper from \"../../../Shared/AuthWrapper\";\r\n\r\nconst VerifyOtp = () => {\r\n  const handleSubmit = (pin) => {\r\n    console.log(\"Entered OTP:\", pin);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\" border border-yellow-300\">\r\n        <AuthWrapper\r\n          AuthForm={OtpForm}\r\n          OtpHandleSubmit={handleSubmit}\r\n          headingText=\"Enter OTP!\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyOtp;\r\n","import { memo } from \"react\";\r\nimport Images from \"../../HelperMethods/ImgConstants\";\r\n\r\nconst AuthWrapper = (props) => {\r\n  const { AuthForm, headingText } = props;\r\n  return (\r\n    <div className=\"grid md:grid-cols-2 sm:grid-cols-1 min-h-screen overflow-hidden\">\r\n      <div className=\"justify-center items-center m-3 md:block hidden\">\r\n        <div\r\n          className=\"flex justify-center items-center h-full w-full bg-cover bg-center bg-no-repeat rounded-xl\"\r\n          style={{ backgroundImage: `url(${Images.AuthBg})` }}\r\n        >\r\n          <div>\r\n            <h1\r\n              className=\"font-bold text-3xl mb-2 text-white text-center\"\r\n              style={{\r\n                textShadow: \"3px 3px 5px rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              {headingText}\r\n            </h1>\r\n            <p\r\n              className=\"text-white text-center mb-2 font-semibold text-md\"\r\n              style={{\r\n                textShadow: \"3px 3px 5px rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n            >\r\n              Your Trusted Partner for Quick and Reliable Vehicle Repairs.\r\n            </p>\r\n            <img className=\"mb-3\" width={430} src={Images.Car} alt=\"\" />\r\n            <div className=\"flex justify-center\">\r\n              <p\r\n                className=\"w-80 text-base text-white text-center\"\r\n                style={{\r\n                  textShadow: \"3px 3px 5px rgba(0, 0, 0, 0.5)\",\r\n                }}\r\n              >\r\n                our One-Stop Solution for Fast, Reliable, and Secure Vehicle\r\n                Services.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"h-full w-full bg-cover bg-center bg-no-repeat \"\r\n        style={{\r\n          backgroundImage: `url(${Images.BackgroundVector})`,\r\n        }}\r\n      >\r\n        {AuthForm && <AuthForm length={5} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(AuthWrapper);\r\n","import { memo } from \"react\";\r\n\r\nconst FillBtn = (props) => {\r\n  const {\r\n    text,\r\n    className,\r\n    handleOnClick,\r\n    type = \"button\",\r\n    disabled = false,\r\n  } = props;\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={handleOnClick}\r\n      className={`bg-blue-600 text-white font-bold md:py-3 py-2 md:px-6 px-4 rounded-sm shadow-md\r\n         hover:bg-blue-800 disabled:bg-gray-400 disabled:cursor-not-allowed transition duration-300 ease-in-out ${className} rounded-lg`}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(FillBtn);\r\n","export const LOGIN_API_URL = \"/login\";\r\nexport const VERIFY_OTP_API_URL = \"/verifyOtp\";\r\nexport const DASHBOARD_STATS_API_URL = \"/dashboard\";\r\nexport const SET_PASSWORD_API_URL = \"/resetPassword\";\r\nexport const UPLOAD_PDF_FILE_API_URL = \"/readpdffile\";\r\nexport const DELETE_VEHICLE_API_URL = \"/deleteVehicle\";\r\nexport const GET_REMINDER_DAYS_API_URL = \"/getReminder\";\r\nexport const FORGET_PASSWORD_API_URL = \"/forgetPassword\";\r\nexport const ADD_NEW_CAR_API_URL = \"/addCustomerVehicle\";\r\nexport const GET_ALL_VEHICLES_API_URL = \"/getAllVehicle\";\r\nexport const UPDATE_CAR_API_URL = \"/updateCustomerVehicle\";\r\nexport const ADD_NEW_TECHNICIAN_API_URL = \"/addTechnician\";\r\nexport const DELETE_TECHNICIAN_API_URL = \"/deleteTechnician\";\r\nexport const UPDATE_TECHNICIANS_API_URL = \"/updateTechnician\";\r\nexport const GET_ALL_TECHNICIANS_API_URL = \"/getAllTechnician\";\r\nexport const UPDATE_REMINDER_DAYS_API_URL = \"/updateReminderDays\";\r\nexport const FIND_VEHICLE_DETAIL_BY_VIN_NUMBER_API_URL = \"/findVinNumber\";\r\nexport const GET_ALL_DELIVERED_VEHICLES_API_URL = \"/getAllDeliveredVehicle\";\r\n// Technician apis endpoint\r\nexport const GET_ALL_ASSIGNED_VEHICLES_BY_TECHNICIAN_API_URL =\r\n  \"getTechnicainVehicle\";\r\n\r\nexport const YearsData = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  const yearsArray = [];\r\n  for (let year = 1950; year <= currentYear; year++) {\r\n    yearsArray.push({ label: year, value: year });\r\n  }\r\n  return yearsArray;\r\n};\r\n\r\nexport const VehicleMakers = [\r\n  { label: \"Toyota\", value: \"Toyota\" },\r\n  { label: \"Volkswagen\", value: \"Volkswagen\" },\r\n  { label: \"Ford\", value: \"Ford\" },\r\n  { label: \"Honda\", value: \"Honda\" },\r\n  { label: \"General Motors\", value: \"General Motors\" },\r\n  { label: \"BMW\", value: \"BMW\" },\r\n  { label: \"Mercedes-Benz\", value: \"Mercedes-Benz\" },\r\n  { label: \"Hyundai\", value: \"Hyundai\" },\r\n  { label: \"Nissan\", value: \"Nissan\" },\r\n  { label: \"Kia\", value: \"Kia\" },\r\n  { label: \"Peugeot\", value: \"Peugeot\" },\r\n  { label: \"Renault\", value: \"Renault\" },\r\n  { label: \"Fiat\", value: \"Fiat\" },\r\n  { label: \"Chevrolet\", value: \"Chevrolet\" },\r\n  { label: \"Subaru\", value: \"Subaru\" },\r\n  { label: \"Mazda\", value: \"Mazda\" },\r\n  { label: \"Tesla\", value: \"Tesla\" },\r\n  { label: \"Volvo\", value: \"Volvo\" },\r\n  { label: \"Jaguar\", value: \"Jaguar\" },\r\n  { label: \"Land Rover\", value: \"Land Rover\" },\r\n  { label: \"Mitsubishi\", value: \"Mitsubishi\" },\r\n  { label: \"Suzuki\", value: \"Suzuki\" },\r\n  { label: \"Porsche\", value: \"Porsche\" },\r\n  { label: \"Ferrari\", value: \"Ferrari\" },\r\n  { label: \"Lamborghini\", value: \"Lamborghini\" },\r\n  { label: \"Aston Martin\", value: \"Aston Martin\" },\r\n  { label: \"Bentley\", value: \"Bentley\" },\r\n  { label: \"Rolls-Royce\", value: \"Rolls-Royce\" },\r\n  { label: \"Maserati\", value: \"Maserati\" },\r\n  { label: \"Alfa Romeo\", value: \"Alfa Romeo\" },\r\n  { label: \"Citroën\", value: \"Citroën\" },\r\n  { label: \"Dodge\", value: \"Dodge\" },\r\n  { label: \"Jeep\", value: \"Jeep\" },\r\n  { label: \"Ram\", value: \"Ram\" },\r\n  { label: \"Chrysler\", value: \"Chrysler\" },\r\n  { label: \"Buick\", value: \"Buick\" },\r\n  { label: \"Cadillac\", value: \"Cadillac\" },\r\n  { label: \"GMC\", value: \"GMC\" },\r\n  { label: \"Lincoln\", value: \"Lincoln\" },\r\n  { label: \"Acura\", value: \"Acura\" },\r\n  { label: \"Infiniti\", value: \"Infiniti\" },\r\n  { label: \"Lexus\", value: \"Lexus\" },\r\n  { label: \"Mini\", value: \"Mini\" },\r\n  { label: \"Skoda\", value: \"Skoda\" },\r\n  { label: \"Seat\", value: \"Seat\" },\r\n  { label: \"Saab\", value: \"Saab\" },\r\n  { label: \"Opel\", value: \"Opel\" },\r\n  { label: \"Vauxhall\", value: \"Vauxhall\" },\r\n  { label: \"Dacia\", value: \"Dacia\" },\r\n  { label: \"Lada\", value: \"Lada\" },\r\n  { label: \"Geely\", value: \"Geely\" },\r\n  { label: \"Great Wall\", value: \"Great Wall\" },\r\n  { label: \"BYD\", value: \"BYD\" },\r\n  { label: \"Chery\", value: \"Chery\" },\r\n  { label: \"Tata Motors\", value: \"Tata Motors\" },\r\n  { label: \"Mahindra & Mahindra\", value: \"Mahindra & Mahindra\" },\r\n  { label: \"Proton\", value: \"Proton\" },\r\n  { label: \"Perodua\", value: \"Perodua\" },\r\n  { label: \"Holden\", value: \"Holden\" },\r\n  { label: \"SsangYong\", value: \"SsangYong\" },\r\n  { label: \"Genesis\", value: \"Genesis\" },\r\n  { label: \"Pagani\", value: \"Pagani\" },\r\n  { label: \"Koenigsegg\", value: \"Koenigsegg\" },\r\n  { label: \"Bugatti\", value: \"Bugatti\" },\r\n  { label: \"McLaren\", value: \"McLaren\" },\r\n  { label: \"Rivian\", value: \"Rivian\" },\r\n  { label: \"Lucid Motors\", value: \"Lucid Motors\" },\r\n  { label: \"Fisker\", value: \"Fisker\" },\r\n  { label: \"Polestar\", value: \"Polestar\" },\r\n  { label: \"Nio\", value: \"Nio\" },\r\n  { label: \"XPeng\", value: \"XPeng\" },\r\n  { label: \"Li Auto\", value: \"Li Auto\" },\r\n  { label: \"VinFast\", value: \"VinFast\" },\r\n];\r\n\r\nexport const TECHNICIAN_SPECIALIZATIONS = [\r\n  { label: \"Mechanic\", value: \"mechanic\" },\r\n  { label: \"Electrician\", value: \"electrician\" },\r\n  { label: \"Body Repair Specialist\", value: \"body_repair_specialist\" },\r\n  { label: \"Tire Specialist\", value: \"tire_specialist\" },\r\n  { label: \"Diagnostic Technician\", value: \"diagnostic_technician\" },\r\n];\r\n\r\nexport const TECHNICIAN_STATUS = [\r\n  { label: \"Available\", value: true },\r\n  { label: \"Unavailable\", value: false },\r\n];\r\n\r\nexport const BEFORE_DAYS_OPTIONS = () =>\r\n  Array.from({ length: 10 }, (_, i) => ({\r\n    label: `Before ${i + 1} days`,\r\n    value: i + 1,\r\n  }));\r\n\r\nexport const VEHICLE_STATUS_OPTIONS = [\r\n  { value: \"Pending\", label: \"Pending\" },\r\n  { value: \"InProgress\", label: \"In Progress\" },\r\n  { value: \"Delivered\", label: \"Delivered\" },\r\n  { value: \"NotInShop\", label: \"Not In Shop\" },\r\n];\r\n\r\nexport const PARTS_STATUS_OPTIONS = [\r\n  {\r\n    value: \"ReadyToOrder\",\r\n    label: \"Ready To Order\",\r\n  },\r\n  {\r\n    value: \"Ordered\",\r\n    label: \"Ordered\",\r\n  },\r\n  {\r\n    value: \"Delivered\",\r\n    label: \"Delivered\",\r\n  },\r\n];\r\n","export const SIGNIN_INITIAL_VALUES = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const ADD_CAR_INITIAL_VALUES = {\r\n  year: \"\",\r\n  make: \"\",\r\n  model: \"\",\r\n  email: \"\",\r\n  status: \"\",\r\n  poNumber: \"\",\r\n  lastName: \"\",\r\n  firstName: \"\",\r\n  deliveryDate: \"\",\r\n  vehiclePoNumber: \"\",\r\n  carPart: [\r\n    {\r\n      price: \"\",\r\n      notes: \"\",\r\n      status: \"\",\r\n      ourPrice: \"\",\r\n      quantity: \"\",\r\n      supplier: \"\",\r\n      partNumber: \"\",\r\n      description: \"\",\r\n      deliveryDate: \"\",\r\n    },\r\n  ],\r\n\r\n  TechnicianIds: [\r\n    {\r\n      TechnicianId: \"\",\r\n      isNotify: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const ADD_TECHNICIAN_INITIAL_VALUES = {\r\n  email: \"\",\r\n  password: \"\",\r\n  lastName: \"\",\r\n  firstName: \"\",\r\n  phoneNumber: \"\",\r\n  specialization: \"\",\r\n  availability: true,\r\n  role: \"Technician\",\r\n};\r\n\r\nexport const UPDATE_TIME_PERIOD_INITIAL_VALUES = {\r\n  id: \"\",\r\n  partsDeliveryAlertDays: \"\",\r\n  vehicleDeliveryAlertDays: \"\",\r\n  vehicleFollowUpNotificationDays: \"\",\r\n};\r\n\r\nexport const UPDATE_TECHNICIAN_INITIAL_VALUES = {\r\n  status: \"\",\r\n};\r\n\r\nexport const FORGOT_PASSWORD_INITIAL_VALUES = {\r\n  email: \"\",\r\n};\r\n\r\nexport const VERIFY_OTP_INITIAL_VALUES = {\r\n  email: \"\",\r\n  token: \"\",\r\n};\r\n\r\nexport const NEW_PASSWORD_INITIAL_VALUES = {\r\n  email: \"\",\r\n  newPassword: \"\",\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nconst nameValidation = Yup.string()\r\n  .min(2, \"Name too short\")\r\n  .max(40, \"Name too long\")\r\n  .required(\"Name required\");\r\n\r\nconst emailValidation = Yup.string()\r\n  .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, \"Invalid email\")\r\n  .required(\"Email required\");\r\n\r\nconst newPasswordValidation = Yup.string()\r\n  .min(\r\n    8,\r\n    \"Password must be at least 8 characters containing uppercase, lowercase, number, and symbol.\"\r\n  )\r\n  .max(40, \"Password must be at most 40  characters long.\")\r\n  .matches(\r\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}[\\]:;<>,.?~\\\\/-]).{8,40}$/,\r\n    \"Password must be at least 8 characters containing uppercase, lowercase, number, and symbol.\"\r\n  )\r\n  .required(\"Password required\");\r\n\r\nconst phoneValidation = Yup.string()\r\n  .matches(/^[0-9]{1,15}$/, \"Phone number is not valid\")\r\n  .required(\"Phone number is required\");\r\n\r\nconst vehicleNumber = Yup.string()\r\n  .required(\"Vehicle Number is required\")\r\n  .max(8)\r\n  .min(4);\r\n\r\nconst vehicleModel = Yup.string()\r\n  .required(\"Vehicle Model is required\")\r\n  .max(40)\r\n  .min(2);\r\n\r\nconst vehicleYear = Yup.string().required(\"Vehicle Year is required\");\r\n\r\nconst generalNumberValidation = Yup.string()\r\n  .required(\"This field is required\")\r\n  .min(1)\r\n  .max(28);\r\n\r\nconst generalTextValidation = Yup.string()\r\n  .required(\"This field is required\")\r\n  .min(1)\r\n  .max(40);\r\n\r\nconst descriptionValidation = Yup.string()\r\n  .required(\"Description is required\")\r\n  .min(1)\r\n  .max(200);\r\n\r\nconst notesValiation = Yup.string().max(\"300\").nullable();\r\n\r\nconst generalTextValidationWithoutRequired = Yup.string()\r\n  .min(1)\r\n  .max(40)\r\n  .nullable();\r\n\r\nconst generalBooleanValidation = Yup.boolean().required(\r\n  \"This field is required\"\r\n);\r\n\r\nexport const newPasswordValidationWithoutRequired = Yup.string()\r\n  .min(\r\n    8,\r\n    \"Password must be at least 8 characters containing uppercase, lowercase, number, and symbol.\"\r\n  )\r\n  .max(40, \"Password must be at most 40  characters long.\")\r\n  .matches(\r\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}[\\]:;<>,.?~\\\\/-]).{8,40}$/,\r\n    \"Password must be at least 8 characters containing uppercase, lowercase, number, and symbol.\"\r\n  );\r\n\r\nexport const SIGNIN_VALIDATION_SCHEMA = Yup.object().shape({\r\n  email: emailValidation,\r\n  password: nameValidation,\r\n});\r\n\r\nexport const ADD_CAR_VALIDATION_SCHEMA = Yup.object().shape({\r\n  year: vehicleYear,\r\n  make: vehicleNumber,\r\n  model: vehicleModel,\r\n  email: emailValidation,\r\n  lastName: nameValidation,\r\n  firstName: nameValidation,\r\n  poNumber: phoneValidation,\r\n  status: generalTextValidation,\r\n  deliveryDate: generalTextValidationWithoutRequired,\r\n  vehiclePoNumber: generalTextValidationWithoutRequired,\r\n\r\n  carPart: Yup.array().of(\r\n    Yup.object().shape({\r\n      price: generalTextValidationWithoutRequired,\r\n      ourPrice: generalTextValidationWithoutRequired,\r\n      supplier: generalTextValidationWithoutRequired,\r\n      status: generalTextValidation,\r\n      quantity: generalNumberValidation,\r\n      description: descriptionValidation,\r\n      partNumber: generalNumberValidation,\r\n      deliveryDate: generalTextValidation,\r\n      notes: notesValiation,\r\n    })\r\n  ),\r\n\r\n  TechnicianIds: Yup.array().of(\r\n    Yup.object().shape({\r\n      isNotify: generalBooleanValidation,\r\n      TechnicianId: generalNumberValidation,\r\n    })\r\n  ),\r\n});\r\n\r\nexport const ADD_TECHNICIAN_VALIDATION_SCHEMA = Yup.object().shape({\r\n  email: emailValidation,\r\n  lastName: nameValidation,\r\n  firstName: nameValidation,\r\n  role: generalTextValidation,\r\n  phoneNumber: phoneValidation,\r\n  password: newPasswordValidation,\r\n  specialization: generalTextValidation,\r\n  availability: generalBooleanValidation,\r\n});\r\n\r\nexport const UPDATE_TECHNICIAN_VALIDATION_SCHEMA = Yup.object().shape({\r\n  id: Yup.string(),\r\n  partsDeliveryAlertDays: generalTextValidation,\r\n  vehicleDeliveryAlertDays: generalTextValidation,\r\n  vehicleFollowUpNotificationDays: generalTextValidation,\r\n});\r\n\r\nexport const UPDATE_VEHICLE_VALIDATION_SCHEMA = Yup.object().shape({\r\n  status: generalTextValidation,\r\n});\r\n\r\nexport const FORGOT_PASSWORD_SCHEMA = Yup.object().shape({\r\n  email: emailValidation,\r\n});\r\n\r\nexport const VERIFY_OTP_VALIDATION_SCHEMA = Yup.object().shape({\r\n  email: emailValidation,\r\n  token: generalNumberValidation,\r\n});\r\n\r\nexport const NEW_PASSWORD_VALIDATION_SCHEMA = Yup.object().shape({\r\n  email: emailValidation,\r\n  newPassword: newPasswordValidation,\r\n});\r\n"],"names":["isStyleObject","obj","OTPInput","_a","_b","value","_c","numInputs","onChange","onPaste","renderInput","_d","shouldAutoFocus","_e","inputType","renderSeparator","placeholder","containerStyle","inputStyle","_f","skipDefaultStyles","_g","React","activeInput","setActiveInput","inputRefs","getOTPValue","toString","split","isInputNum","current","slice","focus","getPlaceholderValue","length","console","error","isInputValueValid","isNaN","Number","trim","handleChange","event","target","changeCodeAtFocus","focusInput","handleInputChange","nativeEvent","some","cellInput","handleOTPChange","data","preventDefault","handleBlur","handleKeyDown","otp","code","key","includes","index","Math","max","min","select","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","pos","shift","style","Object","assign","display","alignItems","className","undefined","Array","from","_","map","ref","element","onFocus","handleFocus","onBlur","onKeyDown","autoComplete","concat","width","textAlign","type","inputMode","onInput","OtpForm","_location$state3","dispatch","useDispatch","navigate","useNavigate","location","useLocation","timeLeft","setTimeLeft","useState","userEmail","setUserEmail","isResendDisabled","setIsResendDisabled","useEffect","_location$state","state","email","timer","setTimeout","clearTimeout","_jsx","children","_jsxs","Formik","onSubmit","values","apiEndpoint","VERIFY_OTP_API_URL","requestData","JSON","stringify","verifyEmailOtp","then","res","_location$state2","initialValues","_objectSpread","VERIFY_OTP_INITIAL_VALUES","validationSchema","VERIFY_OTP_VALIDATION_SCHEMA","_ref","errors","touched","Form","OtpInput","token","name","props","height","disabled","CustomBtn","text","VerifyOtp","AuthWrapper","AuthForm","OtpHandleSubmit","pin","log","headingText","backgroundImage","Images","AuthBg","textShadow","src","Car","alt","BackgroundVector","memo","FillBtn","handleOnClick","onClick","LOGIN_API_URL","DASHBOARD_STATS_API_URL","SET_PASSWORD_API_URL","UPLOAD_PDF_FILE_API_URL","DELETE_VEHICLE_API_URL","GET_REMINDER_DAYS_API_URL","FORGET_PASSWORD_API_URL","ADD_NEW_CAR_API_URL","GET_ALL_VEHICLES_API_URL","UPDATE_CAR_API_URL","ADD_NEW_TECHNICIAN_API_URL","DELETE_TECHNICIAN_API_URL","UPDATE_TECHNICIANS_API_URL","GET_ALL_TECHNICIANS_API_URL","UPDATE_REMINDER_DAYS_API_URL","FIND_VEHICLE_DETAIL_BY_VIN_NUMBER_API_URL","GET_ALL_DELIVERED_VEHICLES_API_URL","GET_ALL_ASSIGNED_VEHICLES_BY_TECHNICIAN_API_URL","TECHNICIAN_STATUS","label","BEFORE_DAYS_OPTIONS","i","VEHICLE_STATUS_OPTIONS","PARTS_STATUS_OPTIONS","SIGNIN_INITIAL_VALUES","password","ADD_CAR_INITIAL_VALUES","year","make","model","status","poNumber","lastName","firstName","deliveryDate","vehiclePoNumber","carPart","price","notes","ourPrice","quantity","supplier","partNumber","description","TechnicianIds","TechnicianId","isNotify","ADD_TECHNICIAN_INITIAL_VALUES","phoneNumber","specialization","availability","role","UPDATE_TIME_PERIOD_INITIAL_VALUES","id","partsDeliveryAlertDays","vehicleDeliveryAlertDays","vehicleFollowUpNotificationDays","UPDATE_TECHNICIAN_INITIAL_VALUES","FORGOT_PASSWORD_INITIAL_VALUES","NEW_PASSWORD_INITIAL_VALUES","newPassword","nameValidation","Yup","required","emailValidation","matches","newPasswordValidation","phoneValidation","vehicleNumber","vehicleModel","vehicleYear","generalNumberValidation","generalTextValidation","descriptionValidation","notesValiation","nullable","generalTextValidationWithoutRequired","generalBooleanValidation","newPasswordValidationWithoutRequired","SIGNIN_VALIDATION_SCHEMA","shape","ADD_CAR_VALIDATION_SCHEMA","of","ADD_TECHNICIAN_VALIDATION_SCHEMA","UPDATE_TECHNICIAN_VALIDATION_SCHEMA","UPDATE_VEHICLE_VALIDATION_SCHEMA","FORGOT_PASSWORD_SCHEMA","NEW_PASSWORD_VALIDATION_SCHEMA"],"sourceRoot":""}